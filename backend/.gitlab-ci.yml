include:
  - project: "templates/ci"
    file: "DockerInDockerTemplate.yml"
  # - template: Security/SAST.gitlab-ci.yml

variables:
  VERSION: 1.0.$CI_COMMIT_SHORT_SHA

stages:
  - build
  # - test
  - release
  - deploy

# ##### build #####

build-backend:
  stage: build
  image: docker:20.10.12-dind-rootless
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd backend
    - >
      docker build --no-cache
      --tag $CI_REGISTRY_IMAGE/dumplings-backend:$VERSION
      .
    - docker push $CI_REGISTRY_IMAGE/dumplings-backend:$VERSION

##### test #####

# sonarqube-backend-sast:
#   stage: test
#   image: sonarsource/sonar-scanner-cli
#   allow_failure: true
#   script:
#     - cd backend
#     - >
#       sonar-scanner
#       -Dsonar.projectKey=${SONAR_PROJECT_PREFIX}BACK
#       -Dsonar.host.url=${SONAR_URL}
#       -Dsonar.login=${SONAR_BACK_LOGIN}
#       -Dsonar.projectName=${SONAR_PROJECT_PREFIX}BACK

# spotbugs-sast:
#   stage: test
#   variables:
#     COMPLILE: "false"

# gosec-sast:
#   before_script:
#     - |
#       cat <<EOF > ~/.netrc
#       machine gitlab.praktikum-services.ru
#       login $CI_DEPLOY_USER
#       password $CI_DEPLOY_PASSWORD
#       EOF

##### release #####

upload-backend-latest:
  stage: release
  image: docker:20.10.12-dind-rootless
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/dumplings-backend:$VERSION
    - docker tag $CI_REGISTRY_IMAGE/dumplings-backend:$VERSION $CI_REGISTRY_IMAGE/dumplings-backend:latest
    - docker push $CI_REGISTRY_IMAGE/dumplings-backend:latest

##### test deploy #####

deploy-backend-test:
  stage: deploy
  image: alpine:latest
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /test-deploy/i"
  environment:
    name: Test Deploy
    url: http://$DEV_HOST
  before_script:
    - apk add openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./docker-compose.yml ${DEV_USER}@${DEV_HOST}:docker-compose.yml
    - >
      ssh ${DEV_USER}@${DEV_HOST}
      "export "CI_REGISTRY=${CI_REGISTRY}";
      export "CI_REGISTRY_IMAGE=${CI_REGISTRY_IMAGE}";
      export "CI_REGISTRY_USER=${CI_REGISTRY_USER}";
      export "CI_REGISTRY_PASSWORD=${CI_REGISTRY_PASSWORD}";
      /bin/bash -s " < ./backend/test-deploy.sh

##### deploy to prod #####

deploy-backend-prod:
  stage: deploy
  trigger:
    project: std-017-042/dumplinginfra
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /prod-deploy/i"
